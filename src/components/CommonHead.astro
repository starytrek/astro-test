---
type Props = {
  title: string;
  description?: string;
};
const response = await fetch(`${import.meta.env.PUBLIC_WPGRAPHQL_URL}`, {
  method: "POST",
  headers: { "Content-Type": "application/json" }, // ✅ konieczne dla WPGraphQL
  body: JSON.stringify({
    query: `
			query MetadataQuery {
				cssVariables				
			}
			
			`,
  }),
});
//mmooje

const data = await response.json();
const { title, description } = Astro.props;
// console.log("🔍 cssVariables =>", data?.data?.cssVariables);
// console.log("GraphQL URL =>", import.meta.env.PUBLIC_WPGRAPHQL_URL);
---

<head>
  <meta charset="UTF-8" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <meta name="description" content={description || "Default description"} />
  <!-- <style>
      :root {
        --css--variables--i--here: black;
      }
    </style> -->
  {!!data.cssVariables && <style set:html={`:root{${data.cssVariables}}`} />}
</head>
